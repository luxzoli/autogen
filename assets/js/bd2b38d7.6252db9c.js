"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3355],{97657:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var c=t(74848),o=t(28453);const s={sidebar_label:"couchbase",title:"agentchat.contrib.vectordb.couchbase"},i=void 0,r={id:"reference/agentchat/contrib/vectordb/couchbase",title:"agentchat.contrib.vectordb.couchbase",description:"CouchbaseVectorDB",source:"@site/docs/reference/agentchat/contrib/vectordb/couchbase.md",sourceDirName:"reference/agentchat/contrib/vectordb",slug:"/reference/agentchat/contrib/vectordb/couchbase",permalink:"/autogen/docs/reference/agentchat/contrib/vectordb/couchbase",draft:!1,unlisted:!1,editUrl:"https://github.com/microsoft/autogen/edit/main/website/docs/reference/agentchat/contrib/vectordb/couchbase.md",tags:[],version:"current",frontMatter:{sidebar_label:"couchbase",title:"agentchat.contrib.vectordb.couchbase"},sidebar:"referenceSideBar",previous:{title:"chromadb",permalink:"/autogen/docs/reference/agentchat/contrib/vectordb/chromadb"},next:{title:"mongodb",permalink:"/autogen/docs/reference/agentchat/contrib/vectordb/mongodb"}},l={},d=[{value:"CouchbaseVectorDB",id:"couchbasevectordb",level:2},{value:"__init__",id:"__init__",level:3},{value:"search_index_exists",id:"search_index_exists",level:3},{value:"create_collection",id:"create_collection",level:3},{value:"create_index_if_not_exists",id:"create_index_if_not_exists",level:3},{value:"get_collection",id:"get_collection",level:3},{value:"delete_collection",id:"delete_collection",level:3},{value:"create_vector_search_index",id:"create_vector_search_index",level:3},{value:"insert_docs",id:"insert_docs",level:3},{value:"update_docs",id:"update_docs",level:3},{value:"delete_docs",id:"delete_docs",level:3},{value:"get_docs_by_ids",id:"get_docs_by_ids",level:3},{value:"retrieve_docs",id:"retrieve_docs",level:3}];function a(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"couchbasevectordb",children:"CouchbaseVectorDB"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-python",children:"class CouchbaseVectorDB(VectorDB)\n"})}),"\n",(0,c.jsx)(n.p,{children:"A vector database implementation that uses Couchbase as the backend."}),"\n",(0,c.jsx)(n.h3,{id:"__init__",children:"__init__"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-python",children:'def __init__(connection_string: str = "couchbase://localhost",\n             username: str = "Administrator",\n             password: str = "password",\n             bucket_name: str = "vector_db",\n             embedding_function: Callable = SentenceTransformer(\n                 "all-MiniLM-L6-v2").encode,\n             scope_name: str = "_default",\n             collection_name: str = "_default",\n             index_name: str = None)\n'})}),"\n",(0,c.jsx)(n.p,{children:"Initialize the vector database."}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"connection_string"})," ",(0,c.jsx)(n.em,{children:"str"})," - The Couchbase connection string to connect to. Default is 'couchbase://localhost'."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"username"})," ",(0,c.jsx)(n.em,{children:"str"})," - The username for Couchbase authentication. Default is 'Administrator'."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"password"})," ",(0,c.jsx)(n.em,{children:"str"})," - The password for Couchbase authentication. Default is 'password'."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"bucket_name"})," ",(0,c.jsx)(n.em,{children:"str"})," - The name of the bucket. Default is 'vector_db'."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"embedding_function"})," ",(0,c.jsx)(n.em,{children:"Callable"}),' - The embedding function used to generate the vector representation. Default is SentenceTransformer("all-MiniLM-L6-v2").encode.']}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"scope_name"})," ",(0,c.jsx)(n.em,{children:"str"})," - The name of the scope. Default is '_default'."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"collection_name"})," ",(0,c.jsx)(n.em,{children:"str"})," - The name of the collection to create for this vector database. Default is '_default'."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"index_name"})," ",(0,c.jsx)(n.em,{children:"str"})," - Index name for the vector database. Default is None."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"overwrite"})," ",(0,c.jsx)(n.em,{children:"bool"})," - Whether to overwrite existing data. Default is False."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"wait_until_index_ready"})," ",(0,c.jsx)(n.em,{children:"float | None"})," - Blocking call to wait until the database indexes are ready. None means no wait. Default is None."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"wait_until_document_ready"})," ",(0,c.jsx)(n.em,{children:"float | None"})," - Blocking call to wait until the database documents are ready. None means no wait. Default is None."]}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"search_index_exists",children:"search_index_exists"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-python",children:"def search_index_exists(index_name: str)\n"})}),"\n",(0,c.jsx)(n.p,{children:"Check if the specified index is ready"}),"\n",(0,c.jsx)(n.h3,{id:"create_collection",children:"create_collection"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-python",children:"def create_collection(collection_name: str,\n                      overwrite: bool = False,\n                      get_or_create: bool = True) -> Collection\n"})}),"\n",(0,c.jsx)(n.p,{children:"Create a collection in the vector database and create a vector search index in the collection."}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"collection_name"})," - str | The name of the collection."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"overwrite"})," - bool | Whether to overwrite the collection if it exists. Default is False."]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"get_or_create"})," - bool | Whether to get or create the collection. Default is True"]}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"create_index_if_not_exists",children:"create_index_if_not_exists"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-python",children:'def create_index_if_not_exists(index_name: str = "vector_index",\n                               collection=None) -> None\n'})}),"\n",(0,c.jsx)(n.p,{children:"Creates a vector search index on the specified collection in Couchbase."}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"index_name"})," ",(0,c.jsx)(n.em,{children:"str, optional"}),' - The name of the vector search index to create. Defaults to "vector_search_index".']}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"collection"})," ",(0,c.jsx)(n.em,{children:"Collection, optional"})," - The Couchbase collection to create the index on. Defaults to None."]}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"get_collection",children:"get_collection"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-python",children:"def get_collection(collection_name: str = None) -> Collection\n"})}),"\n",(0,c.jsx)(n.p,{children:"Get the collection from the vector database."}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"collection_name"})," - str | The name of the collection. Default is None. If None, return the\ncurrent active collection."]}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,c.jsx)(n.p,{children:"Collection | The collection object."}),"\n",(0,c.jsx)(n.h3,{id:"delete_collection",children:"delete_collection"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-python",children:"def delete_collection(collection_name: str) -> None\n"})}),"\n",(0,c.jsx)(n.p,{children:"Delete the collection from the vector database."}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"collection_name"})," - str | The name of the collection."]}),"\n"]}),"\n",(0,c.jsx)(n.h3,{id:"create_vector_search_index",children:"create_vector_search_index"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-python",children:'def create_vector_search_index(\n        collection,\n        index_name: Union[str, None] = "vector_index",\n        similarity: Literal["l2_norm", "dot_product"] = "dot_product") -> None\n'})}),"\n",(0,c.jsx)(n.p,{children:"Create a vector search index in the collection."}),"\n",(0,c.jsx)(n.h3,{id:"insert_docs",children:"insert_docs"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-python",children:"def insert_docs(docs: List[Document],\n                collection_name: str = None,\n                upsert: bool = False,\n                batch_size=DEFAULT_BATCH_SIZE,\n                **kwargs) -> None\n"})}),"\n",(0,c.jsx)(n.p,{children:"Insert Documents and Vector Embeddings into the collection of the vector database. Documents are upserted in all cases."}),"\n",(0,c.jsx)(n.h3,{id:"update_docs",children:"update_docs"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-python",children:"def update_docs(docs: List[Document],\n                collection_name: str = None,\n                batch_size=DEFAULT_BATCH_SIZE,\n                **kwargs: Any) -> None\n"})}),"\n",(0,c.jsx)(n.p,{children:"Update documents, including their embeddings, in the Collection."}),"\n",(0,c.jsx)(n.h3,{id:"delete_docs",children:"delete_docs"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-python",children:"def delete_docs(ids: List[ItemID],\n                collection_name: str = None,\n                batch_size=DEFAULT_BATCH_SIZE,\n                **kwargs)\n"})}),"\n",(0,c.jsx)(n.p,{children:"Delete documents from the collection of the vector database."}),"\n",(0,c.jsx)(n.h3,{id:"get_docs_by_ids",children:"get_docs_by_ids"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-python",children:"def get_docs_by_ids(ids: List[ItemID] | None = None,\n                    collection_name: str = None,\n                    include: List[str] | None = None,\n                    **kwargs) -> List[Document]\n"})}),"\n",(0,c.jsx)(n.p,{children:"Retrieve documents from the collection of the vector database based on the ids."}),"\n",(0,c.jsx)(n.h3,{id:"retrieve_docs",children:"retrieve_docs"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-python",children:"def retrieve_docs(queries: List[str],\n                  collection_name: str = None,\n                  n_results: int = 10,\n                  distance_threshold: float = -1,\n                  **kwargs) -> QueryResults\n"})}),"\n",(0,c.jsx)(n.p,{children:"Retrieve documents from the collection of the vector database based on the queries.\nNote: Distance threshold is not supported in Couchbase FTS."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(a,{...e})}):a(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var c=t(96540);const o={},s=c.createContext(o);function i(e){const n=c.useContext(s);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),c.createElement(s.Provider,{value:n},e.children)}}}]);